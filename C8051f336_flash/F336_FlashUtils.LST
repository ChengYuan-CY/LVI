C51 COMPILER V9.54   F336_FLASHUTILS                                                       12/23/2016 17:00:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE F336_FLASHUTILS
OBJECT MODULE PLACED IN F336_FlashUtils.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe F336_FlashUtils.c DB OE BR INCDIR(C:\SiLabs\MCU_2\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F336_FlashUtils.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2008 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program contains several useful utilities for writing and updating
  10          // FLASH memory.
  11          //
  12          // Target:         C8051F336, 'F337, 'F338, 'F339
  13          // Tool chain:     Keil C51 8.00
  14          // Command Line:   None
  15          //
  16          
  17          //-----------------------------------------------------------------------------
  18          // Includes
  19          //-----------------------------------------------------------------------------
  20          
  21          #include <compiler_defs.h>
  22          #include <c8051F336_defs.h>
  23          #include <F336_FlashUtils.h>
  24          
  25          
  26          
  27          
  28          //-----------------------------------------------------------------------------
  29          // FLASH_ByteWrite
  30          //-----------------------------------------------------------------------------
  31          //
  32          // Return Value : None
  33          // Parameters:
  34          //   1) U16 addr - Flash address to write
  35          //         Range - 0x0000 to 0x3DFF (15.5k user accessible flash)
  36          //   2) U8 byte  - Byte to write
  37          //         Range - 0x00 to 0xFF
  38          //
  39          // This routine writes "byte" at flash address "addr"; Adapted from AN201.
  40          //
  41          //-----------------------------------------------------------------------------
  42          void FLASH_ByteWrite (U16 addr, U8 byte)
  43          {
  44   1         U8 EA_Save = IE;                    // Preserve EA
  45   1         SEGMENT_VARIABLE_SEGMENT_POINTER (pwrite, U8, xdata, data); 
  46   1         //unsigned char xdata * data pwrite;// FLASH write pointer
  47   1      
  48   1         EA = 0;                             // Disable interrupts
  49   1      
  50   1         VDM0CN = 0x80;                      // Enable VDD monitor
  51   1      
  52   1      
  53   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  54   1      
  55   1         pwrite = (char xdata *) addr;
C51 COMPILER V9.54   F336_FLASHUTILS                                                       12/23/2016 17:00:23 PAGE 2   

  56   1      
  57   1         FLKEY  = 0xA5;                      // Key Sequence 1
  58   1         FLKEY  = 0xF1;                      // Key Sequence 2
  59   1         PSCTL |= 0x01;                      // PSWE = 1
  60   1      
  61   1      
  62   1         VDM0CN = 0x80;                      // Enable VDD monitor
  63   1      
  64   1      
  65   1         RSTSRC = 0x02;                      // Enable VDD monitor as a reset source
  66   1      
  67   1         *pwrite = byte;                     // Write the byte
  68   1      
  69   1         PSCTL &= ~0x01;                     // PSWE = 0
  70   1      
  71   1         if ((EA_Save & 0x80) != 0)          // Restore EA
  72   1            EA = 1;
  73   1      }
  74          
  75          
  76          
  77          U8 FLASH_ByteRead (U16 addr)
  78          {
  79   1         bit EA_SAVE = EA;                   // Preserve EA
  80   1         U8 code * data pread;               // FLASH read pointer
  81   1         U8 byte;
  82   1      
  83   1         EA = 0;                             // Disable interrupts
  84   1      
  85   1         pread = (U8 code *) addr;
  86   1      
  87   1         byte = *pread;                      // Read the byte
  88   1      
  89   1         EA = EA_SAVE;                       // Restore interrupts
  90   1      
  91   1         return byte;
  92   1      }
  93          
  94          
  95          //-----------------------------------------------------------------------------
  96          // FLASH_Read
  97          //-----------------------------------------------------------------------------
  98          //
  99          // Return Value :
 100          //   1) U8 *dest - pointer to destination bytes
 101          // Parameters   :
 102          //   1) U8 *dest - pointer to destination bytes
 103          //   2) FLADDR src - address of source bytes in Flash
 104          //                    valid range is 0x0000 to 0x3BFF for 16K Flash devices
 105          //                    valid range is 0x0000 to 0x1FFF for  8K Flash devices
 106          //   3) U16 numbytes - the number of bytes to read
 107          //                              valid range is range of integer
 108          //
 109          // This routine copies <numbytes> from the linear FLASH address <src> to
 110          // <dest>. 
 111          // <dest> + <numbytes> must be less than 0xFBFF/0x7FFF
 112          //
 113          //-----------------------------------------------------------------------------
 114          
 115          void FLASH_Read (U8 *dest, U16 src, U16 numbytes)
 116          {
 117   1         U16 i;
C51 COMPILER V9.54   F336_FLASHUTILS                                                       12/23/2016 17:00:23 PAGE 3   

 118   1      
 119   1         for (i = 0; i < numbytes; i++) {
 120   2            *dest++ = FLASH_ByteRead (src+i);
 121   2         }
 122   1         //return dest;
 123   1      }
 124          
 125          //-----------------------------------------------------------------------------
 126          // FLASH_Fill
 127          //-----------------------------------------------------------------------------
 128          //
 129          // Return Value : None
 130          // Parameters   :
 131          //   1) FLADDR addr - starting address of bytes to fill in Flash
 132          //                    valid range is 0x0000 to 0x3BFF for 16K Flash devices
 133          //                    valid range is 0x0000 to 0x1FFF for  8K Flash devices
 134          //   2) ULONG length - number of bytes to fill
 135          //                     range is total Flash size
 136          //   3) U8 fill - the character used the Flash should be filled with
 137          //
 138          // This routine fills the FLASH beginning at <addr> with <length> bytes.
 139          // The target bytes must be erased before writing to them.
 140          // <addr> + <length> must be less than 0xFBFF/0x7FFF.
 141          //
 142          //-----------------------------------------------------------------------------
 143          
 144          void FLASH_Fill (U16 addr, U16 length, U8 fill)
 145          {
 146   1         U16 i;
 147   1      
 148   1         for (i = 0; i < length; i++) {
 149   2            FLASH_ByteWrite (addr+i, fill);
 150   2         }
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    161    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
