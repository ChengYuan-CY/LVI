C51 COMPILER V9.54   F336_FLASH_TEST                                                       12/23/2016 17:00:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE F336_FLASH_TEST
OBJECT MODULE PLACED IN F336_flash_test.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe F336_flash_test.c DB OE BR INCDIR(C:\SiLabs\MCU_2\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F338_flash_test.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2007 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program lights up the green LED on the C8051F338 target board when
  10          // the capacitive touch sense (contactless) switch (SW3) is touched. 
  11          //
  12          // A relaxation oscillator is implemented using an on-chip analog comparator 
  13          // and external resistors R15 through R19. The high-to-low transitions of the 
  14          // relaxation oscillator are counted by Timer0. The relaxation oscillator 
  15          // frequency depends on the capacitance of the touch sense trace capacitor. 
  16          // The count of Timer0 is periodically checked on every Timer2 overflow. 
  17          // Depending on the count, it can be determined whether SW3 is being touched
  18          // or not. 
  19          //
  20          //
  21          // How To Test:
  22          //
  23          // Setup:
  24          // 1) Download code to the 'F338 target board
  25          // 2) Ensure that pins 1 and 2 are shorted together on the J3 header
  26          // 3) Ensure that pins 1-2, 3-4, 5-6, and 7-8 are shorted on the J11 header
  27          //
  28          // One Time Calibration (stored in non-volatile flash):
  29          // 1) The P1.3 LED will be lit. Place a finger on the touch switch SW3, and 
  30          //    hold it there. Do not remove this finger till step 3.
  31          // 2) Press and hold switch SW2 (P0.7). Release the switch after holding 
  32          //    down for more than a second. 
  33          // 3) The P1.3 LED will continue to be lit. Remove finger from SW3. The LED 
  34          //    should switch off.
  35          //
  36          // Usage:
  37          // 1) Touch SW3. The LED (P1.3) should light up in response.
  38          //
  39          // Target:         C8051F336, 'F337, 'F338, 'F339
  40          // Tool chain:     Generic
  41          // Command Line:   None
  42          //
  43          // Release 1.0
  44          //    -Initial Revision (PKC)
  45          //    -29 AUG 2007
  46          //
  47          
  48          //-----------------------------------------------------------------------------
  49          // Includes
  50          //-----------------------------------------------------------------------------
  51          #include <compiler_defs.h>             // Compiler-specific macros
  52          #include <C8051F336_defs.h>            // SFR declarations
  53          #include <F336_FlashUtils.h>
  54          
  55          //-----------------------------------------------------------------------------
C51 COMPILER V9.54   F336_FLASH_TEST                                                       12/23/2016 17:00:22 PAGE 2   

  56          // Global Constants
  57          //-----------------------------------------------------------------------------
  58          
  59          #define SYSCLK             24500000UL  // SYSCLK frequency in Hz
  60          
  61          #define T2_OVERFLOW_RATE   20          // Timer2 overflow rate in ms
  62          
  63          #define SW3_SENSITIVITY    3000        // Higher number means more sensitive
  64                                                 // This value is added to the cal value
  65          
  66          #define FLASH_TEST_START_ADDR   0x200
  67          #define FLASH_TEST_LENGTH               0x3B00
  68          
  69          
  70          SBIT (LED, SFR_P1, 3);                 // LED==1 means ON
  71          SBIT (SW2, SFR_P0, 7);                 // SW1==0 means switch depressed
  72          
  73          //-----------------------------------------------------------------------------
  74          // Function Prototypes
  75          //-----------------------------------------------------------------------------
  76          void Init_Device (void);
  77          void PCA_Init (void);
  78          void OSCILLATOR_Init (void);
  79          void PORT_Init (void);
  80          void COMPARATOR0_Init (void);
  81          
  82          
  83          void FLASH_ByteWrite (U16 addr, U8 byte);
  84          U8 FLASH_ByteRead (U16 addr);
  85          void Parity_Check(U8 arg, U8 *Parity);
  86          
  87          
  88          
  89          
  90          //-----------------------------------------------------------------------------
  91          // main() Routine
  92          //-----------------------------------------------------------------------------
  93          
  94          void main (void)
  95          {
  96   1         U16 R_add = FLASH_TEST_START_ADDR;
  97   1         U32 Test_count = 0;
  98   1         U8 R_Data;
  99   1         U8 Init_parity = 0;
 100   1         Init_Device ();
 101   1      
 102   1         LED = 1;                     // Initialize switch to not sensed
 103   1      
 104   1         EA = 1;                             // Enable global interrupts
 105   1      
 106   1         //start_add = FLASH_TEST_START_ADDR;
 107   1         FLASH_Fill(FLASH_TEST_START_ADDR, FLASH_TEST_LENGTH, 0x7A);
 108   1         //FLASH_ByteWrite(start_add, 0xAA);
 109   1         
 110   1         while (1) {
 111   2      
 112   2                      for(R_add = FLASH_TEST_START_ADDR; R_add<(FLASH_TEST_START_ADDR+FLASH_TEST_LENGTH); R_add++)
 113   2                      {
 114   3                              FLASH_Read(&R_Data, R_add, 1);
 115   3                              Parity_Check(R_Data, &Init_parity);
 116   3                      }
 117   2      
C51 COMPILER V9.54   F336_FLASH_TEST                                                       12/23/2016 17:00:22 PAGE 3   

 118   2                      Test_count++;
 119   2                 if(Init_parity == 1)
 120   2                 {
 121   3                              LED = 0;
 122   3                              while(1);
 123   3                 }
 124   2      
 125   2         }
 126   1      
 127   1      }
 128          
 129          //-----------------------------------------------------------------------------
 130          // Initialization Subroutines
 131          //-----------------------------------------------------------------------------
 132          
 133          //-----------------------------------------------------------------------------
 134          // Init_Device
 135          //-----------------------------------------------------------------------------
 136          //
 137          // Return Value : None
 138          // Parameters   : None
 139          //
 140          // This function calls all peripheral initialization funtions.
 141          //-----------------------------------------------------------------------------
 142          void Init_Device (void)
 143          {
 144   1         PCA_Init ();
 145   1         OSCILLATOR_Init ();
 146   1         PORT_Init ();
 147   1      }
 148          
 149          //-----------------------------------------------------------------------------
 150          // PCA_Init
 151          //-----------------------------------------------------------------------------
 152          //
 153          // Return Value : None
 154          // Parameters   : None
 155          //
 156          // This function configures the PCA; disables the watchdog timer.
 157          //-----------------------------------------------------------------------------
 158          void PCA_Init (void)
 159          {
 160   1         PCA0MD    &= ~0x40;                // WDTE = 0 (disable watchdog timer)
 161   1         PCA0MD    = 0x00;
 162   1      }
 163          
 164          //-----------------------------------------------------------------------------
 165          // OSCILLATOR_Init
 166          //-----------------------------------------------------------------------------
 167          //
 168          // Return Value : None
 169          // Parameters   : None
 170          //
 171          // This function configures the Internal Oscillator.
 172          //-----------------------------------------------------------------------------
 173          void OSCILLATOR_Init (void)
 174          {
 175   1         OSCICN    = 0x83;                   // Sets SYSCLK to 24.5 MHz
 176   1      }
 177          
 178          //-----------------------------------------------------------------------------
 179          // PORT_Init
C51 COMPILER V9.54   F336_FLASH_TEST                                                       12/23/2016 17:00:22 PAGE 4   

 180          //-----------------------------------------------------------------------------
 181          //
 182          // Configure the Crossbar and GPIO ports.
 183          // P1.3 - LED (push-pull output)
 184          //
 185          void PORT_Init (void)
 186          {
 187   1         P1SKIP   = 0x08;                       // skip the LED pin from crossbar
 188   1         P1MDOUT |= 0x08;                       // enable LED as a push-pull output
 189   1         XBR0     = 0x00;                       // no digital peripherals selected
 190   1         XBR1     = 0x40;                       // Enable crossbar and weak pull-ups
 191   1      }
 192          
 193          
 194          
 195          void Parity_Check(U8 arg, U8 *Parity)
 196          {
 197   1              U8 CK;
 198   1              //U8 parity = 0;
 199   1              CK = arg;
 200   1              while (CK)
 201   1              {
 202   2                if(*Parity == 0)
 203   2                      *Parity = 1;
 204   2                else
 205   2                      *Parity = 0;
 206   2      
 207   2                CK = CK & (CK - 1);
 208   2              }
 209   1              //return parity;
 210   1      }
 211          
 212          
 213          //-----------------------------------------------------------------------------
 214          // End Of File
 215          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    173    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
