C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\yucheng
                    -\SimplicityStudio\usb_pd_stash\EFM8BB3_UART_Interrupt\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\yucheng\SimplicityS
                    -tudio\usb_pd_stash\EFM8BB3_UART_Interrupt\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared
                    -/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB3;C:/SiliconLabs/SimplicityStudio/
                    -v3/developer/sdks/si8051/v3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.
                    -\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              UARTE_1_enter_DefaultMode_from_RESET();
  32   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  33   1              // Restore the SFRPAGE
  34   1              SFRPAGE = SFRPAGE_save;
  35   1              // [Config Calls]$
  36   1      
  37   1      }
  38          
  39          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  40   1              // $[WDTCN - Watchdog Timer Control]
  41   1              SFRPAGE = 0x00;
  42   1              //Disable Watchdog with key sequence
  43   1              WDTCN = 0xDE; //First key
  44   1              WDTCN = 0xAD; //Second key
  45   1              // [WDTCN - Watchdog Timer Control]$
  46   1      
  47   1      }
  48          
  49          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  50   1              // $[P0 - Port 0 Pin Latch]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 2   

  51   1              // [P0 - Port 0 Pin Latch]$
  52   1      
  53   1              // $[P0MDOUT - Port 0 Output Mode]
  54   1              // [P0MDOUT - Port 0 Output Mode]$
  55   1      
  56   1              // $[P0MDIN - Port 0 Input Mode]
  57   1              // [P0MDIN - Port 0 Input Mode]$
  58   1      
  59   1              // $[P0SKIP - Port 0 Skip]
  60   1              /*
  61   1               // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
  62   1               //     crossbar.)
  63   1               // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
  64   1               //     crossbar.)
  65   1               // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
  66   1               //     crossbar.)
  67   1               // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
  68   1               //     crossbar.)
  69   1               // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
  70   1               //     crossbar.)
  71   1               // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
  72   1               //     crossbar.)
  73   1               // B6 (Port 0 Bit 6 Skip) = SKIPPED (P0.6 pin is skipped by the
  74   1               //     crossbar.)
  75   1               // B7 (Port 0 Bit 7 Skip) = SKIPPED (P0.7 pin is skipped by the
  76   1               //     crossbar.)
  77   1               */
  78   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  79   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
  80   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
  81   1              // [P0SKIP - Port 0 Skip]$
  82   1      
  83   1              // $[P0MASK - Port 0 Mask]
  84   1              // [P0MASK - Port 0 Mask]$
  85   1      
  86   1              // $[P0MAT - Port 0 Match]
  87   1              // [P0MAT - Port 0 Match]$
  88   1      
  89   1      }
  90          
  91          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  92   1              // $[P1 - Port 1 Pin Latch]
  93   1              // [P1 - Port 1 Pin Latch]$
  94   1      
  95   1              // $[P1MDOUT - Port 1 Output Mode]
  96   1              /*
  97   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
  98   1               //     drain.)
  99   1               // B1 (Port 1 Bit 1 Output Mode) = PUSH_PULL (P1.1 output is push-pull.)
 100   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 101   1               //     drain.)
 102   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 103   1               //     drain.)
 104   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 105   1               //     drain.)
 106   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 107   1               //     drain.)
 108   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 109   1               //     drain.)
 110   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 111   1               //     drain.)
 112   1               */
 113   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 3   

 114   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 115   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 116   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__PUSH_PULL;
 117   1              // [P1MDOUT - Port 1 Output Mode]$
 118   1      
 119   1              // $[P1MDIN - Port 1 Input Mode]
 120   1              // [P1MDIN - Port 1 Input Mode]$
 121   1      
 122   1              // $[P1SKIP - Port 1 Skip]
 123   1              /*
 124   1               // B0 (Port 1 Bit 0 Skip) = SKIPPED (P1.0 pin is skipped by the
 125   1               //     crossbar.)
 126   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 127   1               //     crossbar.)
 128   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 129   1               //     crossbar.)
 130   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 131   1               //     crossbar.)
 132   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 133   1               //     crossbar.)
 134   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 135   1               //     crossbar.)
 136   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 137   1               //     crossbar.)
 138   1               // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
 139   1               //     crossbar.)
 140   1               */
 141   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED
 142   1                              | P1SKIP_B2__SKIPPED | P1SKIP_B3__SKIPPED
 143   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 144   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 145   1              // [P1SKIP - Port 1 Skip]$
 146   1      
 147   1              // $[P1MASK - Port 1 Mask]
 148   1              // [P1MASK - Port 1 Mask]$
 149   1      
 150   1              // $[P1MAT - Port 1 Match]
 151   1              // [P1MAT - Port 1 Match]$
 152   1      
 153   1      }
 154          
 155          
 156          
 157          //================================================================================
 158          // PORTS_2_enter_DefaultMode_from_RESET
 159          //================================================================================
 160          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 161   1              // $[P2 - Port 2 Pin Latch]
 162   1              // [P2 - Port 2 Pin Latch]$
 163   1      
 164   1              // $[P2MDOUT - Port 2 Output Mode]
 165   1              /*
 166   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 167   1               //     drain.)
 168   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 169   1               //     drain.)
 170   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 171   1               //     drain.)
 172   1               // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 173   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 174   1               //     drain.)
 175   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 176   1               //     drain.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 4   

 177   1               // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
 178   1               //     drain.)
 179   1               */
 180   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 181   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 182   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 183   1                              | P2MDOUT_B6__OPEN_DRAIN;
 184   1              // [P2MDOUT - Port 2 Output Mode]$
 185   1      
 186   1              // $[P2MDIN - Port 2 Input Mode]
 187   1              // [P2MDIN - Port 2 Input Mode]$
 188   1      
 189   1              // $[P2SKIP - Port 2 Skip]
 190   1              /*
 191   1               // B0 (Port 2 Bit 0 Skip) = NOT_SKIPPED (P2.0 pin is not skipped by the
 192   1               //     crossbar.)
 193   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 194   1               //     crossbar.)
 195   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 196   1               //     crossbar.)
 197   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 198   1               //     crossbar.)
 199   1               */
 200   1              SFRPAGE = 0x20;
 201   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__SKIPPED
 202   1                              | P2SKIP_B2__SKIPPED | P2SKIP_B3__SKIPPED;
 203   1              // [P2SKIP - Port 2 Skip]$
 204   1      
 205   1              // $[P2MASK - Port 2 Mask]
 206   1              // [P2MASK - Port 2 Mask]$
 207   1      
 208   1              // $[P2MAT - Port 2 Match]
 209   1              // [P2MAT - Port 2 Match]$
 210   1      
 211   1      }
 212          
 213          
 214          
 215          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 216   1              // $[XBR2 - Port I/O Crossbar 2]
 217   1              /*
 218   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 219   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 220   1               //     mode).)
 221   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 222   1               // URT1E (UART1 I/O Enable) = ENABLED (UART1 TX1 RX1 routed to Port
 223   1               //     pins.)
 224   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 225   1               //     at Port pin.)
 226   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 227   1               //     at Port pin.)
 228   1               */
 229   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 230   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 231   1                              | XBR2_URT1CTSE__DISABLED;
 232   1              // [XBR2 - Port I/O Crossbar 2]$
 233   1      
 234   1              // $[PRTDRV - Port Drive Strength]
 235   1              // [PRTDRV - Port Drive Strength]$
 236   1      
 237   1              // $[XBR0 - Port I/O Crossbar 0]
 238   1              // [XBR0 - Port I/O Crossbar 0]$
 239   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 5   

 240   1              // $[XBR1 - Port I/O Crossbar 1]
 241   1              // [XBR1 - Port I/O Crossbar 1]$
 242   1      
 243   1      }
 244          
 245          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 246   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 247   1              /*
 248   1               // BREN (Baud Rate Generator Enable) = ENABLED (Enable the baud rate
 249   1               //     generator.)
 250   1               // BPS (Baud Rate Prescaler Select) = DIV_BY_1 (Prescaler = 1.)
 251   1               */
 252   1              uint8_t SFRPAGE_save;
 253   1      
 254   1              SFRPAGE_save = SFRPAGE;
 255   1      
 256   1              SFRPAGE = 0x20;
 257   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 258   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 259   1      
 260   1              // $[SMOD1 - UART1 Mode]
 261   1              // [SMOD1 - UART1 Mode]$
 262   1      
 263   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 264   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 265   1      
 266   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 267   1              /*
 268   1               // BRH (UART1 Baud Rate Reload High) = 0xFF
 269   1               */
 270   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 271   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 272   1      
 273   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 274   1              /*
 275   1               // BRL (UART1 Baud Rate Reload Low) = 0x61
 276   1               */
 277   1              SBRLL1 = (0x61 << SBRLL1_BRL__SHIFT);
 278   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 279   1      
 280   1              // $[UART1LIN - UART1 LIN Configuration]
 281   1              // [UART1LIN - UART1 LIN Configuration]$
 282   1      
 283   1              // $[SCON1 - UART1 Serial Port Control]
 284   1              /*
 285   1               // REN (Receive Enable) = RECEIVE_ENABLED (UART1 reception enabled.)
 286   1               */
 287   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 288   1              // [SCON1 - UART1 Serial Port Control]$
 289   1      
 290   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 291   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 292   1      
 293   1              UART1FCN1_TIE = 1;  // Enable interrupt when stop bit is being transmitted
 294   1              //UART1FCN0 &= ~UART1FCN0_TFRQE__ENABLED;   // Disable interrupt for low FIFO
 295   1      
 296   1              SFRPAGE = SFRPAGE_save;
 297   1      
 298   1      }
 299          
 300          
 301          //================================================================================
 302          // INTERRUPT_0_enter_DefaultMode_from_RESET
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 6   

 303          //================================================================================
 304          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 305   1              // $[EIE1 - Extended Interrupt Enable 1]
 306   1              // [EIE1 - Extended Interrupt Enable 1]$
 307   1      
 308   1              // $[EIE2 - Extended Interrupt Enable 2]
 309   1              // [EIE2 - Extended Interrupt Enable 2]$
 310   1      
 311   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 312   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 313   1      
 314   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 315   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 316   1      
 317   1              // $[EIP2 - Extended Interrupt Priority 2]
 318   1              // [EIP2 - Extended Interrupt Priority 2]$
 319   1      
 320   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 321   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 322   1      
 323   1              // $[IE - Interrupt Enable]
 324   1              /*
 325   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 326   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 327   1               //     interrupt 0.)
 328   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 329   1               //     interrupt 1.)
 330   1               // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 331   1               //     interrupts.)
 332   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 333   1               //     interrupt.)
 334   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 335   1               //     interrupt.)
 336   1               // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 337   1               // ES0 (UART0 Interrupt Enable) = ENABLED (Enable UART0 interrupt.)
 338   1               */
 339   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 340   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 341   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 342   1              // [IE - Interrupt Enable]$
 343   1      
 344   1              SFRPAGE = 0x10;
 345   1              EIE2 |= EIE2_ES1__ENABLED;
 346   1              SFRPAGE = 0x0;
 347   1      
 348   1              // $[IP - Interrupt Priority]
 349   1              // [IP - Interrupt Priority]$
 350   1      
 351   1              // $[IPH - Interrupt Priority High]
 352   1              // [IPH - Interrupt Priority High]$
 353   1      
 354   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     97    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/18/2017 18:06:03 PAGE 7   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
